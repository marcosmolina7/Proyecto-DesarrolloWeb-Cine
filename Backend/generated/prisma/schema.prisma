// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  idRole          Int     @id @default(autoincrement())
  nameRole        String  @unique
  descriptionRole String?
  users           User[]
}

model User {
  idUser   Int       @id @default(autoincrement())
  nameUser String    @unique
  passUser String
  idRole   Int
  role     Role      @relation(fields: [idRole], references: [idRole])
  employee Employee?
}

model Employee {
  idEmployee        Int      @id @default(autoincrement())
  namesEmployee     String
  lastNamesEmployee String
  phoneEmployee     String
  birthdayEmployee  DateTime
  stateEmployee     Boolean
  idUser            Int      @unique
  user              User     @relation(fields: [idUser], references: [idUser])
}

model Director {
  idDirector   Int     @id @default(autoincrement())
  nameDirector String  @unique
  movies       Movie[]
}

model Genre {
  idGenre   Int    @id @default(autoincrement())
  nameGenre String @unique
}

model AgeRating {
  idAgeRating   Int     @id @default(autoincrement())
  nameAgeRating String  @unique
  descAgeRating String  @unique
  movies        Movie[]
}

model Room {
  idRoom    Int        @id @default(autoincrement())
  nameRoom  String
  roomSeats RoomSeat[]
}

model Categorie {
  idCategorie   Int    @id @default(autoincrement())
  nameCategorie String @unique
}

model Size {
  idSize   Int    @id @default(autoincrement())
  nameSize String @unique
}

model Supplier {
  idSupplier            Int     @id @default(autoincrement())
  nameSupplier          String  @unique
  contactPersonSupplier String
  phoneSupplier         String
  emailSupplier         String  @unique
  addressSupplier       String?
}

model Movie {
  idMovie         Int       @id @default(autoincrement())
  nameMovie       String
  durationMovie   Int
  synapsisMovie   String
  realseDateMovie DateTime
  posterMovie     String
  idDirector      Int
  director        Director  @relation(fields: [idDirector], references: [idDirector])
  idAgeRating     Int
  ageRating       AgeRating @relation(fields: [idAgeRating], references: [idAgeRating])
}

model Seat {
  idSeat     Int        @id @default(autoincrement())
  rowSeat    String
  columnSeat Int
  roomSeats  RoomSeat[]
}

model RoomSeat {
  idRoom Int
  idSeat Int
  state  String
  room   Room   @relation(fields: [idRoom], references: [idRoom])
  seat   Seat   @relation(fields: [idSeat], references: [idSeat])

  @@id([idRoom, idSeat])
}
